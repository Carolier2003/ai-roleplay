# Redis Stack configuration for AI Roleplay System
# Supports Vector Search via RediSearch module

# Basic Redis configuration
port 6379
bind 0.0.0.0
protected-mode no
daemonize no
loglevel notice
logfile ""
databases 16

# Persistence configuration
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /data

# Network and connection
timeout 0
tcp-keepalive 300
tcp-backlog 511
maxclients 10000

# Memory management
maxmemory-policy allkeys-lru
maxmemory-samples 5

# RediSearch module configuration (for vector search)
# This is automatically loaded in Redis Stack

# RedisJSON module configuration
# This is automatically loaded in Redis Stack

# Performance tuning for vector operations
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-entries 512
list-max-ziplist-value 64
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Enable keyspace notifications for monitoring
notify-keyspace-events ""

# Latency monitoring
latency-monitor-threshold 100

# Slow log configuration
slowlog-log-slower-than 10000
slowlog-max-len 128

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Redis Stack specific settings
# These modules are automatically loaded:
# - RediSearch (for full-text and vector search)
# - RedisJSON (for JSON operations)
# - RedisTimeSeries (for time series data)
# - RedisBloom (for probabilistic data structures)
# - RedisGraph (for graph operations)

# Vector index settings for character knowledge
# These will be configured via Spring AI Redis Vector Store
